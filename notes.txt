

@interface TTCocos2DSingleton : NSObject {
}
@property(nonatomic,retain) CCGLView* glView;
+ (TTCocos2DSingleton *)sharedCocos2D;

@end
@implementation TTCocos2DSingleton

+ (void)initialize {
    serialQueue = dispatch_queue_create("com.duckrowing.radiotuner.SerialQueue", NULL);
}

@synthesize glView;
- (id)init {
    id __block obj;
    
    dispatch_sync(serialQueue, ^{
        obj = [super init];
        if (obj) {
        }
    });
    
    self = obj;
    return self;
}

static TTCocos2DSingleton *sharedInstance = nil;
static dispatch_queue_t serialQueue;

+ (TTCocos2DSingleton *) sharedCocos2D;
{
    static dispatch_once_t onceQueue;
    
    dispatch_once(&onceQueue, ^{
        if (sharedInstance) {
            return;
        }
        sharedInstance = [[TTCocos2DSingleton alloc]init];
        // Create an CCGLView with a RGB565 color buffer, and a depth buffer of 0-bits
        sharedInstance->glView = [CCGLView viewWithFrame:[[UIScreen mainScreen] bounds]
                                             pixelFormat:kEAGLColorFormatRGB565 //kEAGLColorFormatRGBA8
                                             depthFormat:0  //GL_DEPTH_COMPONENT24_OES
                                      preserveBackbuffer:NO
                                              sharegroup:nil
                                           multiSampling:NO
                                         numberOfSamples:0];
        [sharedInstance->glView setMultipleTouchEnabled:YES];
        [sharedInstance setupDirector];
    });
    return sharedInstance;
    
}

- (void)setupDirector
{
    CCDirectorIOS *director = (CCDirectorIOS*) [CCDirector sharedDirector];
    
    [director setView:glView];
//    [director enableRetinaDisplay:YES];
    director.wantsFullScreenLayout = YES;
    [director setDisplayStats:NO];
    [director setAnimationInterval:1.0/60];
}


@end





- (void)viewDidLoad_mETHOD1
{
    [super viewDidLoad];
    
    TTCocos2DSingleton *shared = [TTCocos2DSingleton sharedCocos2D];
    CCGLView *glView = [shared glView];
    
    
    
    
    theBrain = [TheBrain sharedInstance];
    
}


- (void) viewWillAppear:(BOOL)animated
{
    if(![[CCDirector sharedDirector]  runningScene]){
        CCScene *scene = [HelloWorld scene];
        
        myGame = [HelloWorld node];
        //myGame.delegate = self;
        
        [scene addChild: myGame];
        
        [[CCDirector sharedDirector] runWithScene:scene];
    } else {
        // we have a scene already, replace the original to get a new game
        [[CCDirector sharedDirector] startAnimation];
        
        CCScene *scene = [HelloWorld scene];
        
        myGame = [HelloWorld node];
        //myGame.delegate = self;
        
        [scene addChild: myGame];
        
        [[CCDirector sharedDirector] replaceScene:scene];
    }
}
